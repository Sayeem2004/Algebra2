from manimlib.imports import *
from math import*

#python -m manim sterr.py Roblox -pl

class Roblox(Scene):
    CONFIG = {
    'boy_scale': 1.5,
    'thoughtbubble_scale' : 1,
    'angle1': radians(30),
    'angle2' : radians(50),
    'angle3' : radians(25),
    'cake1location' : np.array([-5,3,0]),
    'cake2location' : np.array([0,3,0]),
    'cake3location' : np.array([5,3,0]),
    'cakeproblocation' : np.array([0,-3,0]),
    }
    def construct(self):
        boy = ImageMobject("robloxboy.png")
        thoughtbubble = SVGMobject("Bubbles_thought.svg", width = 4)
        hmm = TextMobject("Hmm..",color=BLACK)
        boylocation = np.array([-1.5,-2,0])
        bubblelocation = np.array([1.5,1.5,0])
        thoughtbubble.scale(self.thoughtbubble_scale)
        boy.scale(self.boy_scale)
        thoughtbubble.move_to(bubblelocation)
        boy.move_to(boylocation)
        hmm.move_to(np.array([1.5,2,0]))
        self.play(GrowFromCenter(boy))
        self.play(DrawBorderThenFill(thoughtbubble))
        self.play(GrowFromEdge(hmm,LEFT))
        self.wait()
        self.remove(boy)
        self.remove(hmm)
        self.remove(thoughtbubble)

#python -m manim sterr.py Arcs -pl
class Arcs(Scene):
    def construct(self):
        graph = ParametricFunction(lambda t : t*np.cos(2*PI*t)*RIGHT + t*np.sin(2*PI*t)*UP, t_min = 0, t_max = 3)
        dot = Dot()
        bot = Dot()
        equals = TextMobject("=").move_to([0, 3, 0])
        arc = TextMobject("arc length").scale(2)
        temp = TextMobject("arc length").next_to(equals, LEFT)
        text = DecimalNumber(0, num_decimal_places = 4).next_to(equals, RIGHT)
        group = VGroup(dot, text)
        time = Dot().scale(0.000001)
        def update(group):
            dot.move_to(graph.points[-1])
            value = np.sqrt(2)/2/PI*(time.get_center()[0]**2)
            text = DecimalNumber(value, num_decimal_places = 4).next_to(equals, RIGHT)
            new_group = VGroup(dot, text)
            group.become(new_group)
            return group
        self.play(FadeIn(arc))
        self.wait()
        self.play(arc.move_to, temp, arc.scale, 0.5, FadeIn(equals), FadeIn(text))
        self.wait()
        self.play(FadeIn(bot))
        self.wait()
        self.play(ShowCreation(graph), UpdateFromFunc(group, update), time.shift, 3*2*PI*RIGHT, run_time = 6, rate_func = smooth)
        self.wait()
        self.remove(graph)
        self.remove(text)
        self.remove(arc)
        self.remove(equals)
        self.remove(temp)
        self.remove(dot)
        self.remove(bot)

#python -m manim sterr.py Ratios -pl
class Ratios(Scene):
    def construct(self):
        before = TextMobject("Before we figure out which cake to eat...")
        beforecont = TextMobject("We need to know the important ratios!")
        know = TexMobject("\\textrm{As you may know, the area of a circle is } \\pi{r^2}")
        circum = TexMobject("\\textrm{And the circumference of a circle is 2} \\pi{r}")
        r = TextMobject("r")
        now = TextMobject("Now using these formulas, we can create an important ratio which we will use in the problem!")
        importantratio = TexMobject(r"\frac{\ell}{2 \pi{r}} = \frac{\theta}{360^{\circ}} = \frac{\textrm{Area of Sector}}{\pi{r^2}}")
        acircle = Circle(radius=2,color=BLUE)
        radius = Line((0,0,0),(2,0,0))
        filledcircle = Circle(radius=2, color=RED, fill_opacity=1)
        aroundcircle = Circle(radius=2, color=RED)
        r.move_to(np.array([1,1/2,0]))
        circum.move_to(np.array([0,3,0]))
        now.move_to(np.array([0,3,0]))
        now.scale(0.8)
        importantratio.scale(1.5)

        acircle.add(radius)
        acircle.add(r)
        self.play(SpinInFromNothing(before))
        self.play(VFadeIn(beforecont.next_to(before,DOWN)))
        self.wait(2)
        self.play(VFadeOut(before))
        self.play(VFadeOut(beforecont))
        self.play(GrowFromEdge(know,LEFT))
        self.play(ApplyMethod(know.shift, 3*UP))
        self.play(GrowFromCenter(acircle))
        self.wait(2)
        self.play(ShowCreation(filledcircle))
        self.wait(2)
        self.remove(filledcircle)
        self.play(Transform(know,circum))
        self.play(ShowCreation(aroundcircle))
        self.wait(1.5)
        self.remove(aroundcircle)
        self.wait(2)
        self.play(Transform(know,now))
        self.play(VFadeOut(acircle))
        self.play(SpinInFromNothing(importantratio))
        self.wait(2)


#python -m manim sterr.py Circlearcs -pl
class Circlearcs(Scene):
    def construct(self):
        smileyface = ImageMobject("smiley.png")
        define = TextMobject("An arc is defined as a portion of the circumference of a curved shape.")
        circulararc = TextMobject("However today we will specifically talk about circular arcs")
        cakes = TextMobject("Now back to those cakes!")
        define.scale(0.8)
        circulararc.scale(0.8)
        smileyface.scale(2)
        circulararc.move_to(np.array([0,3,0]))
        self.play(VFadeIn(define))
        self.wait()
        self.play(Transform(define,circulararc))
        self.play(FadeIn(smileyface))
        self.wait()
        self.remove(smileyface)
        self.remove(define)
        self.play(SpinInFromNothing(cakes))
        self.wait()
        self.play(FadeOutAndShiftDown(cakes))

#python -m manim sterr.py Cakes -pl
class Cakes(Scene):
    def construct(self):
        circle1 = Circle(radius=1,color=RED)
        circle2 = Circle(radius=1.5,color=GREEN)
        circle3 = Circle(radius=2,color=BLUE)
        cake1 = TextMobject("Cake 1")
        cake2 = TextMobject("Cake 2")
        cake3 = TextMobject("Cake 3")
        radius1 = TextMobject('Radius = 8')
        radius2 = TextMobject('Radius = 10')
        radius3 = TextMobject('Radius = 12')
        texangle1 = TexMobject('\\text{Angle} = 101.25^{\circ}')
        texangle2 = TexMobject('\\text{Angle} = 72^{\circ}')
        texangle3 = TexMobject('\\text{Angle} = 45^{\circ}')
        arc1 =  Sector(outer_radius=1,angle=radians(101.25),arc_center=np.array([-4.5,0,0]),)
        arc2 =  Sector(outer_radius=1.5,angle=radians(72),arc_center=np.array([0,0,0]),)
        arc3 =  Sector(outer_radius=2,angle=radians(45),arc_center=np.array([4.5,0,0]),)

        cake1.move_to(np.array([-4.5,3,0]))
        cake2.move_to(np.array([0,3,0]))
        cake3.move_to(np.array([4.5,3,0]))
        radius1.move_to(np.array([-4.5,-3,0]))
        radius2.move_to(np.array([0,-3,0]))
        radius3.move_to(np.array([4.5,-3,0]))
        texangle1.move_to(np.array([-4.5,-3,0]))
        texangle2.move_to(np.array([0,-3,0]))
        texangle3.move_to(np.array([4.5,-3,0]))
        degeneratecircle = Dot(color=RED)
        self.play(VFadeIn(degeneratecircle))
        self.play(Transform(degeneratecircle,circle1))
        self.wait()
        self.play(ApplyMethod(degeneratecircle.shift, 4.5*LEFT))
        self.play(GrowFromCenter(cake1))
        self.wait()
        self.play(ApplyMethod(circle3.shift,4.5*RIGHT))
        self.play(VFadeIn(cake3))
        self.wait()
        self.play(GrowFromEdge(circle2,RIGHT))
        self.play(GrowFromEdge(cake2,LEFT))
        self.wait()
        self.play(ShowCreation(arc1))
        self.play(ShowCreation(arc2))
        self.play(ShowCreation(arc3))
        self.play(GrowFromEdge(radius1,LEFT))
        self.play(GrowFromEdge(radius2,LEFT))
        self.play(GrowFromEdge(radius3,LEFT))
        self.wait()
        self.play(Transform(radius1,texangle1))
        self.play(Transform(radius2,texangle2))
        self.play(Transform(radius3,texangle3))
        self.wait()

#python -m manim sterr.py Cake1 -pl
class Cake1(Scene):
    def construct(self):
         # Title Title Title Title Title
        title1 = TextMobject("Cake Slices")
        self.play(Write(title1))
        self.play(ApplyMethod(title1.shift,UP*3.4))
        self.wait(1)

        # Cake 1 Cake 1 Cake 1 Cake 1 Cake 1
        heading1 = TextMobject("Slice 1")
        heading1.shift(UP*2.8)
        heading1.scale(.75)
        self.play(Write(heading1))
        self.wait(1)

        sector1 = Sector(radius=2,angle=math.radians(101.25),arc_center=np.array([-0.3,1,0]),color=MAROON_B)
        sector1.scale(1.75)
        self.play(GrowFromCenter(sector1))
        self.wait(1)

        # Cake 1 Solution Cake 1 Solution Cake 1 Solution Cake 1 Solution Cake 1 Solution
        text1 = TexMobject(r"\text{Radius} = 8")
        text1.move_to((0,.1,0))
        text1.scale(.6)
        self.play(Write(text1))
        self.wait(1.5)

        text2 = TexMobject(r"\text{Arc Length} = 4.5 \pi")
        text2.move_to((0,-.3,0))
        text2.scale(.6)
        self.play(Write(text2))
        self.wait(1.5)

        text3 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot r")
        text3.move_to((0,-.7,0))
        text3.scale(.6)
        self.play(Write(text3))
        self.wait(4)

        text4 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot 8")
        text4.move_to((0,-.7,0))
        text4.scale(.6)
        self.play(Transform(text3,text4))
        self.wait(1)

        text5 = TexMobject(r"\text{Circumference} = 16 \pi")
        text5.move_to((0,-.7,0))
        text5.scale(.6)
        self.play(Transform(text3,text5))
        self.wait(3)

        text6 = TexMobject(r"\frac{\text{Arc Length}}{\text{Circumference}} = \frac{\theta}{360}")
        text6.move_to((0,-1.3,0))
        text6.scale(.6)
        self.play(Write(text6))
        self.wait(6)

        text7 = TexMobject(r"\frac{4.5 \pi}{16 \pi} = \frac{\theta}{360}")
        text7.move_to((0,-1.3,0))
        text7.scale(.6)
        self.play(Transform(text6,text7))
        self.wait(1)

        text8 = TexMobject(r"0.28125 = \frac{\theta}{360}")
        text8.move_to((0,-1.3,0))
        text8.scale(.6)
        self.play(Transform(text6,text8))
        self.wait(1)

        text9 = TexMobject(r"\theta = 101.25^{\circ}")
        text9.move_to((0,-1.1,0))
        text9.scale(.6)
        self.play(Transform(text6,text9))
        self.wait(3)

        text10 = TexMobject(r"\text{Circle Area} = \pi \cdot  r^{2}")
        text10.move_to((0,-1.5,0))
        text10.scale(.6)
        self.play(Write(text10))
        self.wait(4)

        text11 = TexMobject(r"\text{Circle Area} = \pi \cdot  8^{2}")
        text11.move_to((0,-1.5,0))
        text11.scale(.6)
        self.play(Transform(text10,text11))
        self.wait(1)

        text12 = TexMobject(r"\text{Circle Area} = 64 \pi")
        text12.move_to((0,-1.5,0))
        text12.scale(.6)
        self.play(Transform(text10,text12))
        self.wait(3)

        text13 = TexMobject(r"\frac{\text{Sector Area}}{\text{Total Area}} = \frac{\theta}{360}")
        text13.move_to((0,-2.1,0))
        text13.scale(.6)
        self.play(Write(text13))
        self.wait(6)

        text14 = TexMobject(r"\frac{\text{Sector Area}}{64 \pi} = \frac{101.25}{360}")
        text14.move_to((0,-2.1,0))
        text14.scale(.6)
        self.play(Transform(text13,text14))
        self.wait(1)

        text15 = TexMobject(r"\frac{\text{Sector Area}}{64 \pi} = \frac{9}{32}")
        text15.move_to((0,-2.1,0))
        text15.scale(.6)
        self.play(Transform(text13,text15))
        self.wait(1)

        text16 = TexMobject(r"\frac{\text{Sector Area}}{64 \pi} = 0.28125")
        text16.move_to((0,-2.1,0))
        text16.scale(.6)
        self.play(Transform(text13,text16))
        self.wait(1)

        text17 = TexMobject(r"\text{Sector Area} = 18 \pi")
        text17.move_to((0,-1.9,0))
        text17.scale(.6)
        self.play(Transform(text13,text17))
        self.wait(6)

        heading1.add(sector1)
        heading1.add(text1)
        heading1.add(text2)
        heading1.add(text3)
        heading1.add(text6)
        heading1.add(text10)
        heading1.add(text13)
        self.play(ApplyMethod(heading1.shift,4*LEFT))

#python -m manim sterr.py Cake2 -pl
class Cake23(Scene):
    def construct(self):
        heading2 = TextMobject("Slice 2")
        heading2.shift(UP*2.8)
        heading2.scale(.75)
        heading3 = TextMobject("Slice 3")
        heading3.shift(UP*2.8,RIGHT*4)
        heading3.scale(.75)
        self.play(Write(heading2,run_time=.6),Write(heading3,run_time=.6))

        sector2 = Sector(radius=3,angle=math.radians(72),arc_center=np.array([-0.5,1,0]),color=TEAL)
        sector2.scale(1.75)
        sector3 = Sector(radius=4,angle=math.radians(45),arc_center=np.array([3.5,1,0]),color=PURPLE)
        sector3.scale(1.75)
        self.play(GrowFromCenter(sector2,run_time=.6),GrowFromCenter(sector3,run_time=.6))

        ctext1 = TexMobject(r"\text{Radius} = 10")
        ctext1.move_to((0,.1,0))
        ctext1.scale(.6)
        cctext1 = TexMobject(r"\text{Radius} = 12")
        cctext1.move_to((4,.1,0))
        cctext1.scale(.6)
        self.play(Write(ctext1,run_time=.6),Write(cctext1,run_time=.6))

        ctext2 = TexMobject(r"\text{Arc Length} = 4 \pi")
        ctext2.move_to((0,-.3,0))
        ctext2.scale(.6)
        cctext2 = TexMobject(r"\text{Arc Length} = 3 \pi")
        cctext2.move_to((4,-.3,0))
        cctext2.scale(.6)
        self.play(Write(ctext2,run_time=.6),Write(cctext2,run_time=.6))

        ctext3 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot r")
        ctext3.move_to((0,-.7,0))
        ctext3.scale(.6)
        cctext3 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot r")
        cctext3.move_to((4,-.7,0))
        cctext3.scale(.6)
        self.play(Write(ctext3,run_time=.6),Write(cctext3,run_time=.6))

        ctext4 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot 10")
        ctext4.move_to((0,-.7,0))
        ctext4.scale(.6)
        cctext4 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot 12")
        cctext4.move_to((4,-.7,0))
        cctext4.scale(.6)
        self.play(Transform(ctext3,ctext4,run_time=.6),Transform(cctext3,cctext4,run_time=.6))

        ctext5 = TexMobject(r"\text{Circumference} = 20 \pi")
        ctext5.move_to((0,-.7,0))
        ctext5.scale(.6)
        cctext5 = TexMobject(r"\text{Circumference} = 24 \pi")
        cctext5.move_to((4,-.7,0))
        cctext5.scale(.6)
        self.play(Transform(ctext3,ctext5,run_time=.6),Transform(cctext3,cctext5,run_time=.6))

        ctext6 = TexMobject(r"\frac{\text{Arc Length}}{\text{Circumference}} = \frac{\theta}{360}")
        ctext6.move_to((0,-1.3,0))
        ctext6.scale(.6)
        cctext6 = TexMobject(r"\frac{\text{Arc Length}}{\text{Circumference}} = \frac{\theta}{360}")
        cctext6.move_to((4,-1.3,0))
        cctext6.scale(.6)
        self.play(Write(ctext6,run_time=.6),Write(cctext6,run_time=.6))

        ctext7 = TexMobject(r"\frac{4 \pi}{20 \pi} = \frac{\theta}{360}")
        ctext7.move_to((0,-1.3,0))
        ctext7.scale(.6)
        cctext7 = TexMobject(r"\frac{3 \pi}{24 \pi} = \frac{\theta}{360}")
        cctext7.move_to((4,-1.3,0))
        cctext7.scale(.6)
        self.play(Transform(ctext6,ctext7,run_time=.6),Transform(cctext6,cctext7,run_time=.6))

        ctext8 = TexMobject(r"0.2 = \frac{\theta}{360}")
        ctext8.move_to((0,-1.3,0))
        ctext8.scale(.6)
        cctext8 = TexMobject(r"0.125 = \frac{\theta}{360}")
        cctext8.move_to((4,-1.3,0))
        cctext8.scale(.6)
        self.play(Transform(ctext6,ctext8,run_time=.6),Transform(cctext6,cctext8,run_time=.6))

        ctext9 = TexMobject(r"\theta = 72^{\circ}")
        ctext9.move_to((0,-1.1,0))
        ctext9.scale(.6)
        cctext9 = TexMobject(r"\theta = 45^{\circ}")
        cctext9.move_to((4,-1.1,0))
        cctext9.scale(.6)
        self.play(Transform(ctext6,ctext9,run_time=.6),Transform(cctext6,cctext9,run_time=.6))

        ctext10 = TexMobject(r"\text{Circle Area} = \pi \cdot  r^{2}")
        ctext10.move_to((0,-1.5,0))
        ctext10.scale(.6)
        cctext10 = TexMobject(r"\text{Circle Area} = \pi \cdot  r^{2}")
        cctext10.move_to((4,-1.5,0))
        cctext10.scale(.6)
        self.play(Write(ctext10,run_time=.6),Write(cctext10,run_time=.6))

        ctext11 = TexMobject(r"\text{Circle Area} = \pi \cdot  10^{2}")
        ctext11.move_to((0,-1.5,0))
        ctext11.scale(.6)
        cctext11 = TexMobject(r"\text{Circle Area} = \pi \cdot  12^{2}")
        cctext11.move_to((4,-1.5,0))
        cctext11.scale(.6)
        self.play(Transform(ctext10,ctext11,run_time=.6),Transform(cctext10,cctext11,run_time=.6))

        ctext12 = TexMobject(r"\text{Circle Area} = 100 \pi")
        ctext12.move_to((0,-1.5,0))
        ctext12.scale(.6)
        cctext12 = TexMobject(r"\text{Circle Area} = 144 \pi")
        cctext12.move_to((4,-1.5,0))
        cctext12.scale(.6)
        self.play(Transform(ctext10,ctext12,run_time=.6),Transform(cctext10,cctext12,run_time=.6))

        ctext13 = TexMobject(r"\frac{\text{Sector Area}}{\text{Total Area}} = \frac{\theta}{360}")
        ctext13.move_to((0,-2.1,0))
        ctext13.scale(.6)
        cctext13 = TexMobject(r"\frac{\text{Sector Area}}{\text{Total Area}} = \frac{\theta}{360}")
        cctext13.move_to((4,-2.1,0))
        cctext13.scale(.6)
        self.play(Write(ctext13,run_time=.6),Write(cctext13,run_time=.6))

        ctext14 = TexMobject(r"\frac{\text{Sector Area}}{100 \pi} = \frac{72}{360}")
        ctext14.move_to((0,-2.1,0))
        ctext14.scale(.6)
        cctext14 = TexMobject(r"\frac{\text{Sector Area}}{144 \pi} = \frac{45}{360}")
        cctext14.move_to((4,-2.1,0))
        cctext14.scale(.6)
        self.play(Transform(ctext13,ctext14,run_time=.6),Transform(cctext13,cctext14,run_time=.6))

        ctext15 = TexMobject(r"\frac{\text{Sector Area}}{100 \pi} = \frac{1}{5}")
        ctext15.move_to((0,-2.1,0))
        ctext15.scale(.6)
        cctext15 = TexMobject(r"\frac{\text{Sector Area}}{144 \pi} = \frac{1}{8}")
        cctext15.move_to((4,-2.1,0))
        cctext15.scale(.6)
        self.play(Transform(ctext13,ctext15,run_time=.6),Transform(cctext13,cctext15,run_time=.6))

        ctext16 = TexMobject(r"\frac{\text{Sector Area}}{100 \pi} = 0.20")
        ctext16.move_to((0,-2.1,0))
        ctext16.scale(.6)
        cctext16 = TexMobject(r"\frac{\text{Sector Area}}{144 \pi} = 0.125")
        cctext16.move_to((4,-2.1,0))
        cctext16.scale(.6)
        self.play(Transform(ctext13,ctext16,run_time=.6),Transform(cctext13,cctext16,run_time=.6))

        ctext17 = TexMobject(r"\text{Sector Area} = 20 \pi")
        ctext17.move_to((0,-1.9,0))
        ctext17.scale(.6)
        cctext17 = TexMobject(r"\text{Sector Area} = 18 \pi")
        cctext17.move_to((4,-1.9,0))
        cctext17.scale(.6)
        self.play(Transform(ctext13,ctext17,run_time=.6),Transform(cctext13,cctext17,run_time=.6))
