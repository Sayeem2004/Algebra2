from manimlib.imports import *
from math import*

#python -m manim sterrproj.py Animation -pl
class Test(Scene):
    def construct(self):
        definearc = TextMobject("An arc is defined as a portion of the circumference of a curved shape.")
        definesector = TextMobject("And sectors which are the part of a circle enclosed by two radii of a circle and their intercepted arc.")
        circulararc = TextMobject("However, today we will specifically talk about circular arcs")
        cakes = TextMobject("Now back to those cakes!")
        sector = Sector(outer_radius=2,angle=radians(30), color=BLUE)
        sectorcircle= Circle(radius=2,color=RED)
        definearc.scale(0.8)
        circulararc.scale(0.8)
        definesector.scale(0.8)
        circulararc.move_to(np.array([0,3,0]))
        definesector.move_to(np.array([0,3,0]))
        self.play(GrowFromCenter(definearc))
        self.wait(2)
        self.remove(definearc)
        graph = ParametricFunction(lambda t : t*np.cos(2*PI*t)*RIGHT + t*np.sin(2*PI*t)*UP, t_min = 0, t_max = 3)
        dot = Dot()
        bot = Dot()
        equals = TextMobject("=").move_to([0, 3, 0])
        arc = TextMobject("arc length").scale(2)
        temp = TextMobject("arc length").next_to(equals, LEFT)
        text = DecimalNumber(0, num_decimal_places = 4).next_to(equals, RIGHT)
        group = VGroup(dot, text)
        time = Dot().scale(0.000001)
        def update(group):
            dot.move_to(graph.points[-1])
            value = np.sqrt(2)/2/PI*(time.get_center()[0]**2)
            text = DecimalNumber(value, num_decimal_places = 4).next_to(equals, RIGHT)
            new_group = VGroup(dot, text)
            group.become(new_group)
            return group
        self.play(FadeIn(arc))
        self.wait()
        self.play(arc.move_to, temp, arc.scale, 0.5, FadeIn(equals), FadeIn(text))
        self.wait()
        self.play(FadeIn(bot))
        self.wait()
        self.play(ShowCreation(graph), UpdateFromFunc(group, update), time.shift, 3*2*PI*RIGHT, run_time = 3, rate_func = smooth)
        self.wait()
        self.remove(graph)
        self.remove(text)
        self.remove(arc)
        self.remove(equals)
        self.remove(temp)
        self.remove(dot)
        self.remove(bot)

        self.wait(2)
        self.play(GrowFromEdge(circulararc,LEFT))
        self.play(GrowFromEdge(sectorcircle,LEFT))
        self.play(Transform(circulararc,definesector))
        self.play(ShowCreation(sector))
        self.wait(2)
        self.remove(circulararc)
        self.remove(sector)
        self.remove(sectorcircle)
        self.play(GrowFromEdge(know,LEFT))
        self.play(ApplyMethod(know.shift, 3*UP))
        self.play(GrowFromCenter(acircle))
        self.wait(2)
        self.play(ShowCreation(filledcircle))
        self.wait(2)
        self.remove(filledcircle)
        self.play(Transform(know,circum))
        self.play(ShowCreation(aroundcircle))
        self.wait(1.5)
        self.remove(aroundcircle)
        self.wait(2)
        self.play(Transform(know,now))
        self.play(VFadeOut(acircle))
        self.play(SpinInFromNothing(importantratio))
        self.wait(5)
        self.remove(importantratio)
        self.remove(know)

class Animation(Scene):
    CONFIG = {
    'boy_scale': 1.5,
    'thoughtbubble_scale' : 1,
    'angle1': radians(30),
    'angle2' : radians(50),
    'angle3' : radians(25),
    'cake1location' : np.array([-5,3,0]),
    'cake2location' : np.array([0,3,0]),
    'cake3location' : np.array([5,3,0]),
    'cakeproblocation' : np.array([0,-3,0]),
    }
    def construct(self):

        boy = ImageMobject("robloxboy.png")
        thoughtbubble = SVGMobject("Bubbles_thought.svg", width = 4)
        hmm = TextMobject("Hmm..",color=BLACK)
        boylocation = np.array([-1.5,-2,0])
        bubblelocation = np.array([1.5,1.5,0])
        thoughtbubble.scale(self.thoughtbubble_scale)
        boy.scale(self.boy_scale)
        thoughtbubble.move_to(bubblelocation)
        boy.move_to(boylocation)
        hmm.move_to(np.array([1.5,2,0]))
        self.play(GrowFromCenter(boy))
        self.play(DrawBorderThenFill(thoughtbubble))
        self.play(GrowFromEdge(hmm,LEFT))
        self.wait()
        self.remove(boy)
        self.remove(hmm)
        self.remove(thoughtbubble)




        before = TextMobject("Before we figure out which cake to eat...")
        beforecont = TextMobject("We need to know the important formulas and definitions!")
        know = TexMobject("\\textrm{As you may also know, the area of a circle is } \\pi{r^2}")
        circum = TexMobject("\\textrm{And the circumference of a circle is 2} \\pi{r}")
        r = TextMobject("r")
        now = TextMobject("Now using these formulas and definitions, we can create an important ratio which we will use in the problem!")
        importantratio = TexMobject(r"\frac{\ell}{2 \pi{r}} = \frac{\theta}{360^{\circ}} = \frac{\textrm{Area of Sector}}{\pi{r^2}}")
        acircle = Circle(radius=2,color=BLUE)
        radius = Line((0,0,0),(2,0,0))
        filledcircle = Circle(radius=2, color=RED, fill_opacity=1)
        aroundcircle = Circle(radius=2, color=RED)
        r.move_to(np.array([1,1/2,0]))
        circum.move_to(np.array([0,3,0]))
        now.move_to(np.array([0,3,0]))
        now.scale(0.8)
        importantratio.scale(1.5)

        acircle.add(radius)
        acircle.add(r)
        self.play(SpinInFromNothing(before))
        self.play(VFadeIn(beforecont.next_to(before,DOWN)))
        self.wait(2)
        before.add(beforecont)
        self.play(VFadeOut(before))


        definearc = TextMobject("An arc is defined as a portion of the circumference of a curved shape.")
        definesector = TextMobject("And sectors which are the part of a circle enclosed by two radii of a circle and their intercepted arc.")
        circulararc = TextMobject("However, today we will specifically talk about circular arcs")
        cakes = TextMobject("Now back to those cakes!")
        sector = Sector(outer_radius=2,angle=radians(30), color=BLUE)
        sectorcircle= Circle(radius=2,color=RED)
        definearc.scale(0.8)
        circulararc.scale(0.8)
        definesector.scale(0.8)

        circulararc.move_to(np.array([0,3,0]))
        definesector.move_to(np.array([0,3,0]))
        self.play(GrowFromCenter(definearc))
        self.wait(2)
        self.remove(definearc)
        graph = ParametricFunction(lambda t : t*np.cos(2*PI*t)*RIGHT + t*np.sin(2*PI*t)*UP, t_min = 0, t_max = 3)
        dot = Dot()
        bot = Dot()
        equals = TextMobject("=").move_to([0, 3, 0])
        arc = TextMobject("arc length").scale(2)
        temp = TextMobject("arc length").next_to(equals, LEFT)
        text = DecimalNumber(0, num_decimal_places = 4).next_to(equals, RIGHT)
        group = VGroup(dot, text)
        time = Dot().scale(0.000001)
        def update(group):
            dot.move_to(graph.points[-1])
            value = np.sqrt(2)/2/PI*(time.get_center()[0]**2)
            text = DecimalNumber(value, num_decimal_places = 4).next_to(equals, RIGHT)
            new_group = VGroup(dot, text)
            group.become(new_group)
            return group
        self.play(FadeIn(arc))
        self.wait()
        self.play(arc.move_to, temp, arc.scale, 0.5, FadeIn(equals), FadeIn(text))
        self.wait()
        self.play(FadeIn(bot))
        self.wait()
        self.play(ShowCreation(graph), UpdateFromFunc(group, update), time.shift, 3*2*PI*RIGHT, run_time = 3, rate_func = smooth)
        self.wait()
        self.remove(graph)
        self.remove(text)
        self.remove(arc)
        self.remove(equals)
        self.remove(temp)
        self.remove(dot)
        self.remove(bot)

        self.wait(2)
        self.play(GrowFromEdge(circulararc,LEFT))
        self.play(GrowFromEdge(sectorcircle,LEFT))
        self.play(Transform(circulararc,definesector))
        self.play(ShowCreation(sector))
        self.wait(2)
        self.remove(circulararc)
        self.remove(sector)
        self.remove(sectorcircle)
        self.play(GrowFromEdge(know,LEFT))
        self.play(ApplyMethod(know.shift, 3*UP))
        self.play(GrowFromCenter(acircle))
        self.wait(2)
        self.play(ShowCreation(filledcircle))
        self.wait(2)
        self.remove(filledcircle)
        self.play(Transform(know,circum))
        self.play(ShowCreation(aroundcircle))
        self.wait(1.5)
        self.remove(aroundcircle)
        self.wait(2)
        self.play(Transform(know,now))
        self.play(VFadeOut(acircle))
        self.play(SpinInFromNothing(importantratio))
        self.wait(5)
        self.remove(importantratio)
        self.remove(know)

        self.play(SpinInFromNothing(cakes))
        self.wait()
        self.play(FadeOutAndShiftDown(cakes))




        title1 = TextMobject("Cake Slices")
        self.play(Write(title1))
        self.play(ApplyMethod(title1.shift,UP*3.4))
        self.wait(1)

        # Cake 1 Cake 1 Cake 1 Cake 1 Cake 1
        heading1 = TextMobject("Slice 1")
        heading1.shift(UP*2.8)
        heading1.scale(.75)
        self.play(Write(heading1))
        self.wait(1)

        sector1 = Sector(radius=2,angle=math.radians(101.25),arc_center=np.array([-0.5,1,0]),color=MAROON_B)
        self.play(GrowFromCenter(sector1))
        self.wait(1)

        # Cake 1 Solution Cake 1 Solution Cake 1 Solution Cake 1 Solution Cake 1 Solution
        text1 = TexMobject(r"\text{Radius} = 8")
        text1.move_to((0,.1,0))
        text1.scale(.6)
        self.play(Write(text1))
        self.wait(1)

        text2 = TexMobject(r"\text{Arc Length} = 4.5 \pi")
        text2.move_to((0,-.3,0))
        text2.scale(.6)
        self.play(Write(text2))
        self.wait(1)

        text3 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot r")
        text3.move_to((0,-.7,0))
        text3.scale(.6)
        self.play(Write(text3))
        self.wait(1)

        text4 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot 8")
        text4.move_to((0,-.7,0))
        text4.scale(.6)
        self.play(Transform(text3,text4))
        self.wait(1)

        text5 = TexMobject(r"\text{Circumference} = 16 \pi")
        text5.move_to((0,-.7,0))
        text5.scale(.6)
        self.play(Transform(text3,text5))
        self.wait(1)

        text6 = TexMobject(r"\frac{\text{Arc Length}}{\text{Circumference}} = \frac{\theta}{360}")
        text6.move_to((0,-1.3,0))
        text6.scale(.6)
        self.play(Write(text6))
        self.wait(2)

        text7 = TexMobject(r"\frac{4.5 \pi}{16 \pi} = \frac{\theta}{360}")
        text7.move_to((0,-1.3,0))
        text7.scale(.6)
        self.play(Transform(text6,text7))
        self.wait(2)

        text8 = TexMobject(r"0.28125 = \frac{\theta}{360}")
        text8.move_to((0,-1.3,0))
        text8.scale(.6)
        self.play(Transform(text6,text8))
        self.wait(2)

        text9 = TexMobject(r"\theta = 101.25^{\circ}")
        text9.move_to((0,-1.1,0))
        text9.scale(.6)
        self.play(Transform(text6,text9))
        self.wait(1)

        text10 = TexMobject(r"\text{Circle Area} = \pi \cdot  r^{2}")
        text10.move_to((0,-1.5,0))
        text10.scale(.6)
        self.play(Write(text10))
        self.wait(1)

        text11 = TexMobject(r"\text{Circle Area} = \pi \cdot  8^{2}")
        text11.move_to((0,-1.5,0))
        text11.scale(.6)
        self.play(Transform(text10,text11))
        self.wait(1)

        text12 = TexMobject(r"\text{Circle Area} = 64 \pi")
        text12.move_to((0,-1.5,0))
        text12.scale(.6)
        self.play(Transform(text10,text12))
        self.wait(2)

        text13 = TexMobject(r"\text{Sector Area} = \frac{\theta}{360 ^{\circ}} \cdot \text{Total Area}")
        text13.move_to((0,-2.1,0))
        text13.scale(.6)
        self.play(Write(text13))
        self.wait(2)

        text14 = TexMobject(r"\text{Sector Area} = \frac{101.25}{360^{\circ}} \cdot 64 \pi")
        text14.move_to((0,-2.1,0))
        text14.scale(.6)
        self.play(Transform(text13,text14))
        self.wait(2)

        text15 = TexMobject(r"\text{Sector Area} = \frac{9}{32} \cdot 64 \pi")
        text15.move_to((0,-2.1,0))
        text15.scale(.6)
        self.play(Transform(text13,text15))
        self.wait(2)

        text16 = TexMobject(r"\text{Sector Area} = 18 \pi")
        text16.move_to((0,-1.9,0))
        text16.scale(.6)
        self.play(Transform(text13,text16))
        self.wait(2)

        heading1.add(sector1)
        heading1.add(text1)
        heading1.add(text2)
        heading1.add(text3)
        heading1.add(text6)
        heading1.add(text10)
        heading1.add(text13)
        self.play(ApplyMethod(heading1.shift,4*LEFT))

        heading1 = TextMobject("Slice 2")
        heading1.shift(UP*2.8)
        heading1.scale(.75)
        self.play(Write(heading1))
        self.wait(1)

        sector1 = Sector(radius=3,angle=math.radians(72),arc_center=np.array([-0.5,1,0]),color=TEAL)
        self.play(GrowFromCenter(sector1))
        self.wait(1)

        # Cake 1 Solution Cake 1 Solution Cake 1 Solution Cake 1 Solution Cake 1 Solution
        text1 = TexMobject(r"\text{Radius} = 10")
        text1.move_to((0,.1,0))
        text1.scale(.6)
        self.play(Write(text1))

        text2 = TexMobject(r"\text{Arc Length} = 4 \pi")
        text2.move_to((0,-.3,0))
        text2.scale(.6)
        self.play(Write(text2))
        self.wait(1)

        text3 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot r")
        text3.move_to((0,-.7,0))
        text3.scale(.6)
        self.play(Write(text3))
        self.wait(1)

        text4 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot 10")
        text4.move_to((0,-.7,0))
        text4.scale(.6)
        self.play(Transform(text3,text4))
        self.wait(1)

        text5 = TexMobject(r"\text{Circumference} = 20 \pi")
        text5.move_to((0,-.7,0))
        text5.scale(.6)
        self.play(Transform(text3,text5))
        self.wait(1)

        text6 = TexMobject(r"\frac{\text{Arc Length}}{\text{Circumference}} = \frac{\theta}{360^{\circ}}")
        text6.move_to((0,-1.3,0))
        text6.scale(.6)
        self.play(Write(text6))
        self.wait(2)

        text7 = TexMobject(r"\frac{4 \pi}{20 \pi} = \frac{\theta}{360^{\circ}}")
        text7.move_to((0,-1.3,0))
        text7.scale(.6)
        self.play(Transform(text6,text7))
        self.wait(2)

        text8 = TexMobject(r"0.2 = \frac{\theta}{360^{\circ}}")
        text8.move_to((0,-1.3,0))
        text8.scale(.6)
        self.play(Transform(text6,text8))
        self.wait(2)

        text9 = TexMobject(r"\theta = 72^{\circ}")
        text9.move_to((0,-1.1,0))
        text9.scale(.6)
        self.play(Transform(text6,text9))
        self.wait(2)

        text10 = TexMobject(r"\text{Circle Area} = \pi \cdot  r^{2}")
        text10.move_to((0,-1.5,0))
        text10.scale(.6)
        self.play(Write(text10))
        self.wait(1)

        text11 = TexMobject(r"\text{Circle Area} = \pi \cdot  10^{2}")
        text11.move_to((0,-1.5,0))
        text11.scale(.6)
        self.play(Transform(text10,text11))
        self.wait(1)

        text12 = TexMobject(r"\text{Circle Area} = 100 \pi")
        text12.move_to((0,-1.5,0))
        text12.scale(.6)
        self.play(Transform(text10,text12))
        self.wait(2)

        text13 = TexMobject(r"\text{Sector Area} = \frac{\theta}{360^{\circ}} \cdot \text{Total Area}")
        text13.move_to((0,-2.1,0))
        text13.scale(.6)
        self.play(Write(text13))
        self.wait(2)

        text14 = TexMobject(r"\text{Sector Area} = \frac{72}{360} \cdot 100 \pi")
        text14.move_to((0,-2.1,0))
        text14.scale(.6)
        self.play(Transform(text13,text14))
        self.wait(2)

        text15 = TexMobject(r"\text{Sector Area} = \frac{1}{5} \cdot 100 \pi")
        text15.move_to((0,-2.1,0))
        text15.scale(.6)
        self.play(Transform(text13,text15))
        self.wait(2)

        text16 = TexMobject(r"\text{Sector Area} = 20 \pi")
        text16.move_to((0,-1.9,0))
        text16.scale(.6)
        self.play(Transform(text13,text16))
        self.wait(2)


        heading1 = TextMobject("Slice 1")
        heading1.shift(UP*2.8,RIGHT*4)
        heading1.scale(.75)
        self.play(Write(heading1))
        self.wait(1)

        sector1 = Sector(radius=4,angle=math.radians(45),arc_center=np.array([3.5,1,0]),color=PURPLE)
        self.play(GrowFromCenter(sector1))
        self.wait(1)

        # Cake 3 Solution
        text1 = TexMobject(r"\text{Radius} = 12")
        text1.move_to((4,.1,0))
        text1.scale(.6)
        self.play(Write(text1))
        self.wait(1)

        text2 = TexMobject(r"\text{Arc Length} = 3 \pi")
        text2.move_to((4,-.3,0))
        text2.scale(.6)
        self.play(Write(text2))
        self.wait(1)

        text3 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot r")
        text3.move_to((4,-.7,0))
        text3.scale(.6)
        self.play(Write(text3))
        self.wait(1)

        text4 = TexMobject(r"\text{Circumference} = 2 \cdot \pi \cdot 12")
        text4.move_to((4,-.7,0))
        text4.scale(.6)
        self.play(Transform(text3,text4))
        self.wait(1)

        text5 = TexMobject(r"\text{Circumference} = 24 \pi")
        text5.move_to((4,-.7,0))
        text5.scale(.6)
        self.play(Transform(text3,text5))
        self.wait(1)

        text6 = TexMobject(r"\frac{\text{Arc Length}}{\text{Circumference}} = \frac{\theta}{360}")
        text6.move_to((4,-1.3,0))
        text6.scale(.6)
        self.play(Write(text6))
        self.wait(2)

        text7 = TexMobject(r"\frac{3 \pi}{24 \pi} = \frac{\theta}{360^{\circ}}")
        text7.move_to((4,-1.3,0))
        text7.scale(.6)
        self.play(Transform(text6,text7))
        self.wait(2)

        text8 = TexMobject(r"0.125 = \frac{\theta}{360^{\circ}}")
        text8.move_to((4,-1.3,0))
        text8.scale(.6)
        self.play(Transform(text6,text8))
        self.wait(2)

        text9 = TexMobject(r"\theta = 45^{\circ}")
        text9.move_to((4,-1.1,0))
        text9.scale(.6)
        self.play(Transform(text6,text9))
        self.wait(1)

        text10 = TexMobject(r"\text{Circle Area} = \pi \cdot  r^{2}")
        text10.move_to((4,-1.5,0))
        text10.scale(.6)
        self.play(Write(text10))
        self.wait(1)

        text11 = TexMobject(r"\text{Circle Area} = \pi \cdot  12^{2}")
        text11.move_to((4,-1.5,0))
        text11.scale(.6)
        self.play(Transform(text10,text11))
        self.wait(1)

        text12 = TexMobject(r"\text{Circle Area} = 144 \pi")
        text12.move_to((4,-1.5,0))
        text12.scale(.6)
        self.play(Transform(text10,text12))
        self.wait(2)

        text13 = TexMobject(r"\text{Sector Area} = \frac{\theta}{360^{\circ}} \cdot \text{Total Area}")
        text13.move_to((4,-2.1,0))
        text13.scale(.6)
        self.play(Write(text13))
        self.wait(2)

        text14 = TexMobject(r"\text{Sector Area} = \frac{45}{360^{\circ}} \cdot 144 \pi")
        text14.move_to((4,-2.1,0))
        text14.scale(.6)
        self.play(Transform(text13,text14))
        self.wait(2)

        text15 = TexMobject(r"\text{Sector Area} = \frac{1}{8} \cdot 144 \pi")
        text15.move_to((4,-2.1,0))
        text15.scale(.6)
        self.play(Transform(text13,text15))
        self.wait(2)

        text16 = TexMobject(r"\text{Sector Area} = 18 \pi")
        text16.move_to((4,-1.9,0))
        text16.scale(.6)
        self.play(Transform(text13,text16))
        self.wait(2)
